/**
 *
 * PayPal Node JS SDK dependency
 */
const checkoutNodeJssdk = require('@paypal/checkout-server-sdk');

/**
 *
 * Returns PayPal HTTP client instance with environment that has access
 * credentials context. Use this instance to invoke PayPal APIs, provided the
 * credentials have access.
 */
function client(credentials) {
    return new checkoutNodeJssdk.core.PayPalHttpClient(environment(credentials));
}

/**
 *
 * Set up and return PayPal JavaScript SDK environment with PayPal access credentials.
 * This sample uses SandboxEnvironment. In production, use LiveEnvironment.
 *
 */
function environment(credentials) {
    let clientId = credentials.clientId || 'PAYPAL-CLIENT-ID';
    let clientSecret = credentials.clientSecret || 'PAYPAL-CLIENT-SECRET';
    const environment = credentials.environment || 'dev' // 'dev' or 'production'

    if (environment=='production' || environment=='prod'){
        return new checkoutNodeJssdk.core.LiveEnvironment(
            clientId, clientSecret
        );
    }
    else {
        return new checkoutNodeJssdk.core.SandboxEnvironment(
            clientId, clientSecret
        );
    }

}

function executeRequest(orderID, credentials){
    const ppClient = new checkoutNodeJssdk.core.PayPalHttpClient(environment(credentials));
    const request = new checkoutNodeJssdk.orders.OrdersGetRequest(orderID)

    // this returns a promise:
    return ppClient.execute(request)
}

/*
async function prettyPrint(jsonData, pre=""){
    let pretty = "";
    function capitalize(string) {
        return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
    }
    for (let key in jsonData){
        if (jsonData.hasOwnProperty(key)){
            if (isNaN(key))
              pretty += pre + capitalize(key) + ": ";
            else
              pretty += pre + (parseInt(key) + 1) + ": ";
            if (typeof jsonData[key] === "object"){
                pretty += "\n";
                pretty += await prettyPrint(jsonData[key], pre + "    ");
            }
            else {
                pretty += jsonData[key] + "\n";
            }

        }
    }
    return pretty;
} */

module.exports = {
    client: client,
    // prettyPrint: prettyPrint,
    executeRequest: executeRequest
}
